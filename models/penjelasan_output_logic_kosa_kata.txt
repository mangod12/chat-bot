fOUTPUT

1. variabel "json" berisi, pertanyaan pengguna contoh : "nomor telepon" yang akan dijadikan array "parse2" yang dicocokan ke seluruh pertanyaan yang ada pada database, semisal ada output :

#### console.log(asd+' == '+data[j])

Maka akan menampilkan :

#### output 1
0 . null == daftar pengampu mata pelajaran
1 . nomor == nomor telepon pegawai
2 . nomor == nomor induk pegawai
3 . nomor == nomor telepon siswa
4 . nomor == nomor telepon orang tua siswa
5 . nomor == nomor telepon wali siswa
6 . null == nama lengkap siswa
==================>> <<==================
7 . null == daftar pengampu mata pelajaran
8 . telepon == nomor telepon pegawai
9 . null == nomor induk pegawai
10. telepon == nomor telepon siswa
11. telepon == nomor telepon orang tua siswa
12. telepon == nomor telepon wali siswa
13. null == nama lengkap siswa

#### output 2
0 |1 |2 |3 |4 |5 |6 |7 |8 |9 |10|11|12|13
0,|1,|1,|1,|1,|1,|0,|0,|1,|0,|1,|1,|1,|0

2. variabel "tempArray" memecah data pada variabel "json" sesuai dengan total seluruh pertanyaan yang ada pada database

## output
  =======  nomor  =======  ======  telepon  ======
[ [ 0, 1, 1, 1, 1, 1, 0 ], [ 0, 1, 0, 1, 1, 1, 0 ] ]

3. Variabel untuk menggabungkan array diatas, supaya bisa dihitung berapa jumlah pertanyaan dr pengguna yang cocok pada database. Looping dan menghasilkan variabel "tempMatchPerKata" memasangkan antara :

index[0][0] & index[1][0] = 0,0
index[0][1] & index[1][1] = 1,1
index[0][2] & index[1][2] = 1,0
index[0][3] & index[1][3] = 1,1
index[0][4] & index[1][4] = 1,1
index[0][5] & index[1][5] = 1,1
index[0][6] & index[1][6] = 0,0

#### Hasil akhir
[ 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0 ]

hasil akhir tersebut dichunk lagi untuk proses perhitungan final pertanyaan dr pengguna yang siap dicocokan dengan pertanyaan pd database

4. variabel "tempArrayd" berisi tentang potongan / chunk dari variabel "tempMatchPerKata" sesuai dengan panjang pertanyaan yang dikonversi menjadi array pada pengguna.

#### Output
[ [ 0, 0 ],
  [ 1, 1 ],
  [ 1, 0 ],
  [ 1, 1 ],
  [ 1, 1 ],
  [ 1, 1 ],
  [ 0, 0 ] ]

5. variabel "fix.tes" berisi tentang data json yang menampung hitungan pertanyaan dari pengguna yang cocok pada pertanyaan database

### output 1
[
{ id: 0, total_match: 0, kalimat: 'daftar pengampu mata pelajaran' },
{ id: 1, total_match: 2, kalimat: 'nomor telepon pegawai' },
{ id: 2, total_match: 1, kalimat: 'nomor induk pegawai' },
{ id: 3, total_match: 2, kalimat: 'nomor telepon siswa' },
{ id: 4, total_match: 2, kalimat: 'nomor telepon wali siswa' },
{ id: 5, total_match: 2, kalimat: 'nomor telepon orang tua siswa' },
{ id: 6, total_match: 0, kalimat: 'nama lengkap siswa' }  
]

#### arti
-> tempArrayd[i].filter(i => i === 1).length
menghitung array pada output Nomor 4, yang bernilai "1"

#### output 2
[ 0, 2, 1, 2, 2, 2, 0 ]

6. Mengumpulkan seluruh nomor maksimal pada variabel "totalMatch", dengan parameter maksimal variabel "max_match_kata" dan kemudian hasil akan ditampung oleh variabel "filtered".

#### output
[ 2, 2, 2, 2 ]

7. Menyeleksi kalimat pertanyaan pada database yang cocok dengan pertanyaan pada pengguna dengan kondisi. Jika total_match pada variabel "tes" cocok dengan nomor yang ada pada variabel "filetered", maka akan dipush kedalam variabel "aa".
